/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * osuarezqwixxduel implementation : © <Your name here> <Your email address here>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * osuarezqwixxduel.css
 *
 * osuarezqwixxduel stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (osuarezqwixxduel_osuarezqwixxduel.tpl), and to HTML elements you create dynamically
    (in osuarezqwixxduel.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/


/*
    Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

    .white_token {
        background-image: url('img/tokens.png');
        background-position: 0px 0px;
    }
    .black_token {
        background-image: url('img/tokens.png');
        background-position: -20px 0px;
    }
    .token {
        width: 20px;
        height: 20px;
        background-repeat: none;
    }
*/

#board {
    width: 1569px;
    height: 600px;
    background-image: url('img/Board.png');
    position: relative;
}

.square {
    width: 64px;
    height: 64px;
    position: absolute;
    /* background-color: red; */
}


.token {
    width: 56px;
    height: 56px;
    position: absolute;
    background-image: url('img/Tokens.png');
}
.tokencolor_ffffff { background-position: 0px 0px;   }
.tokencolor_000000 { background-position: -56px 0px;   }

#dice_wrap {
    text-align: center;
}

.dice {
    width: 110px;
    height: 110px;
    position: relative;
    background-image: url('img/dice.png');
}

.dice.white {
    background-position: 0px 0px;
}


.dice.blue:hover {
    background-position: 0px 0px;
    background-color: blue;
    text-shadow: 0 0px 30px black;
}

.dice.green:hover {
    background-color: green;
    background-position: 0px 0px;
    text-shadow: 0 0px 30px black;
}

.dice.yellow:hover {
    background-color: yellow;
    background-position: 0px 0px;
    text-shadow: 0 0px 30px black;
}

.dice.red:hover {
    background-color: red;
    background-position: 0px 0px;
    text-shadow: 0 0px 30px black;
}

.dieClicked {
    border: 0.2em red dotted;
    border-radius: 10px;
}